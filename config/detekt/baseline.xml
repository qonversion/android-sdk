<?xml version='1.0' encoding='UTF-8'?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>CommentSpacing:com.qonversion.android.sdk.internal.userProperties.UserPropertiesStorageImplTest.kt:468</ID>
    <ID>CommentSpacing:com.qonversion.android.sdk.internal.userProperties.UserPropertiesStorageImplTest.kt:486</ID>
    <ID>ComplexCondition:QonversionRepository.kt$QonversionRepository$(purchase.freeTrialPeriod.isNotEmpty() || purchase.introductoryAvailable) &amp;&amp; purchase.introductoryPeriodUnit != null &amp;&amp; purchase.introductoryPeriodUnitsCount != null</ID>
    <ID>ComplexMethod:errors.kt$fun BillingError.toQonversionError(): QonversionError</ID>
    <ID>ConstructorParameterNaming:Environment.kt$Environment$@Json(name = "app_version") val app_version: String</ID>
    <ID>EmptyCatchBlock:AdvertisingProvider.kt$AdvertisingProvider.AdvertisingConnection${ }</ID>
    <ID>EmptyFunctionBlock:AdvertisingProvider.kt$AdvertisingProvider.AdvertisingConnection${}</ID>
    <ID>EmptyFunctionBlock:AppLifecycleObserverImpl.kt$AppLifecycleObserverImpl${}</ID>
    <ID>EmptyFunctionBlock:QProductCenterManager.kt$QProductCenterManager.&lt;no name provided>${}</ID>
    <ID>Filename:com.qonversion.android.sdk.internal.networkLayer.headerBuilder.HeaderBuilderImplTest.kt:1</ID>
    <ID>FinalNewline:com.qonversion.android.sdk.internal.InternalConfigTest.kt:1</ID>
    <ID>FinalNewline:com.qonversion.android.sdk.internal.common.mappers.MapDataMapperTest.kt:1</ID>
    <ID>FinalNewline:com.qonversion.android.sdk.internal.userProperties.UserPropertiesServiceImplTest.kt:1</ID>
    <ID>FinalNewline:com.qonversion.android.sdk.utils.kt:1</ID>
    <ID>ImplicitDefaultLocale:GooglePurchaseConverter.kt$GooglePurchaseConverter$String.format("%.2f", divideResult)</ID>
    <ID>LargeClass:QProductCenterManager.kt$QProductCenterManager : PurchasesListenerOfferingsDelegate</ID>
    <ID>LongParameterList:RepositoryModule.kt$RepositoryModule$( retrofit: Retrofit, environmentProvider: EnvironmentProvider, config: QonversionConfig, logger: Logger, purchasesCache: PurchasesCache, apiErrorMapper: ApiErrorMapper, sharedPreferences: SharedPreferences, delayCalculator: IncrementalDelayCalculator )</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$10002</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$10003</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$10004</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$10005</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$10006</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$10008</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20005</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20006</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20007</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20008</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20010</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20011</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20012</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20013</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20014</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20201</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20203</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20210</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20300</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20303</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20399</ID>
    <ID>MagicNumber:ApiInteractorImpl.kt$418</ID>
    <ID>MagicNumber:CacheLifetime.kt$CacheLifetime.ThreeDays$3</ID>
    <ID>MagicNumber:GooglePurchaseConverter.kt$GooglePurchaseConverter$3</ID>
    <ID>MagicNumber:GooglePurchaseConverter.kt$GooglePurchaseConverter$30</ID>
    <ID>MagicNumber:GooglePurchaseConverter.kt$GooglePurchaseConverter$365</ID>
    <ID>MagicNumber:GooglePurchaseConverter.kt$GooglePurchaseConverter$7</ID>
    <ID>MagicNumber:InternalCacheLifetime.kt$InternalCacheLifetime.FiveMin$5</ID>
    <ID>MagicNumber:LogLevel.kt$LogLevel.Error$30</ID>
    <ID>MagicNumber:LogLevel.kt$LogLevel.Info$10</ID>
    <ID>MagicNumber:LogLevel.kt$LogLevel.Warning$20</ID>
    <ID>MagicNumber:QProductDuration.kt$QProductDuration.Annual$4</ID>
    <ID>MagicNumber:QProductDuration.kt$QProductDuration.Companion$3</ID>
    <ID>MagicNumber:QProductDuration.kt$QProductDuration.Companion$4</ID>
    <ID>MagicNumber:QProductDuration.kt$QProductDuration.SixMonthly$3</ID>
    <ID>MagicNumber:QProductRenewState.kt$QProductRenewState.BillingIssue$3</ID>
    <ID>MagicNumber:QProductRenewState.kt$QProductRenewState.Companion$3</ID>
    <ID>MagicNumber:QTrialDuration.kt$QTrialDuration.Companion$3</ID>
    <ID>MagicNumber:QTrialDuration.kt$QTrialDuration.Companion$4</ID>
    <ID>MagicNumber:QTrialDuration.kt$QTrialDuration.Companion$5</ID>
    <ID>MagicNumber:QTrialDuration.kt$QTrialDuration.Companion$6</ID>
    <ID>MagicNumber:QTrialDuration.kt$QTrialDuration.Companion$7</ID>
    <ID>MagicNumber:QTrialDuration.kt$QTrialDuration.Companion$8</ID>
    <ID>MagicNumber:QTrialDuration.kt$QTrialDuration.Companion$9</ID>
    <ID>MagicNumber:QTrialDuration.kt$QTrialDuration.Month$4</ID>
    <ID>MagicNumber:QTrialDuration.kt$QTrialDuration.Other$9</ID>
    <ID>MagicNumber:QTrialDuration.kt$QTrialDuration.SixMonths$7</ID>
    <ID>MagicNumber:QTrialDuration.kt$QTrialDuration.ThreeMonths$6</ID>
    <ID>MagicNumber:QTrialDuration.kt$QTrialDuration.TwoMonths$5</ID>
    <ID>MagicNumber:QTrialDuration.kt$QTrialDuration.TwoWeeks$3</ID>
    <ID>MagicNumber:QTrialDuration.kt$QTrialDuration.Year$8</ID>
    <ID>MagicNumber:QonversionInternal.kt$QonversionInternal$15</ID>
    <ID>MagicNumber:QonversionInternal.kt$QonversionInternal$43</ID>
    <ID>MagicNumber:QonversionInternal.kt$QonversionInternal$44</ID>
    <ID>MagicNumber:QonversionInternal.kt$QonversionInternal$45</ID>
    <ID>MagicNumber:QonversionInternal.kt$QonversionInternal$462323</ID>
    <ID>MagicNumber:QonversionInternal.kt$QonversionInternal$47</ID>
    <ID>MagicNumber:QonversionInternal.kt$QonversionInternal$6</ID>
    <ID>MagicNumber:utils.kt$1000</ID>
    <ID>MatchingDeclarationName:HeaderBuilderImplTest.kt$HeaderBuilderTest</ID>
    <ID>MaxLineLength:ApiErrorMapper.kt$ApiErrorMapper$20201 -> "For more details please check our guide [Troubleshooting](https://documentation.qonversion.io/docs/troubleshooting)"</ID>
    <ID>MaxLineLength:ApiErrorMapper.kt$ApiErrorMapper$20203 -> "Possible reasons for this error are fraud purchases and incorrect configuration of the project key in the Qonversion Dashboard"</ID>
    <ID>MaxLineLength:GoogleBillingDataFetcherTest.kt$GoogleBillingDataFetcherTest.QueryPurchasesHistoryTest$verify(exactly = 1) { mockLogger.verbose("queryPurchasesHistory() -> Querying purchase history for type $skuType") }</ID>
    <ID>MaxLineLength:GooglePurchaseConverter.kt$GooglePurchaseConverter$private</ID>
    <ID>MaxLineLength:JsonSerializerTest.kt$JsonSerializerTest$"""{"field1": ["value1", "value2"]}""" to mapOf("field1" to listOf("value1", "value2"))</ID>
    <ID>MaxLineLength:Qonversion.kt$Qonversion$*</ID>
    <ID>MaxLineLength:QonversionBillingService.kt$QonversionBillingService$"Failed to acknowledge purchase with token $purchaseToken ${billingResult.getDescription()}"</ID>
    <ID>MaxLineLength:QonversionBillingService.kt$QonversionBillingService$if</ID>
    <ID>MaxLineLength:QonversionBillingService.kt$QonversionBillingService$logger.debug("getPurchaseHistoryFromSkuDetails() -> Querying purchase history for ${skuDetails.sku} with type ${skuDetails.type}")</ID>
    <ID>MaxLineLength:QonversionBillingService.kt$QonversionBillingService$logger.debug("queryPurchaseHistoryAsync() -> purchase history for $skuType is retrieved ${record.getDescription()}")</ID>
    <ID>MaxLineLength:QonversionBillingService.kt$QonversionBillingService$logger.debug("querySkuDetailsAsync() -> Querying skuDetails for type $productType, identifiers: ${skuList.joinToString()}")</ID>
    <ID>MaxLineLength:QonversionBillingService.kt$QonversionBillingService$logger.debug("replaceOldPurchase() -> Purchase was found successfully for sku: ${oldSkuDetails.sku}")</ID>
    <ID>MaxLineLength:QonversionBillingService.kt$QonversionBillingService$logger.release("launchBillingFlow() -> Failed to launch billing flow. ${billingResult.getDescription()}")</ID>
    <ID>MaxLineLength:QonversionBillingService.kt$QonversionBillingService$private</ID>
    <ID>MaxLineLength:QonversionError.kt$QonversionErrorCode$*</ID>
    <ID>MaxLineLength:utils.kt$"ProductId: ${this.sku}; PurchaseTime: ${this.purchaseTime.convertLongToTime()}; PurchaseToken: ${this.purchaseToken}"</ID>
    <ID>MaxLineLength:utils.kt$internal</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.billing.dataFetcher.GoogleBillingDataFetcherTest.kt:459</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.common.serializers.JsonSerializerTest.kt:25</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.old.api.ApiErrorMapper.kt:117</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.old.api.ApiErrorMapper.kt:118</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.old.billing.QonversionBillingService.kt:109</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.old.billing.QonversionBillingService.kt:205</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.old.billing.QonversionBillingService.kt:236</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.old.billing.QonversionBillingService.kt:265</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.old.billing.QonversionBillingService.kt:290</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.old.billing.QonversionBillingService.kt:326</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.old.billing.QonversionBillingService.kt:362</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.old.billing.QonversionBillingService.kt:404</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.old.billing.QonversionBillingService.kt:412</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.old.billing.utils.kt:22</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.old.converter.GooglePurchaseConverter.kt:83</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.utils.kt:25</ID>
    <ID>NestedBlockDepth:ApiErrorMapper.kt$ApiErrorMapper$fun &lt;T> getErrorFromResponse(value: Response&lt;T>): QonversionError</ID>
    <ID>NewLineAtEndOfFile:InternalConfigTest.kt$com.qonversion.android.sdk.internal.InternalConfigTest.kt</ID>
    <ID>NewLineAtEndOfFile:MapDataMapperTest.kt$com.qonversion.android.sdk.internal.common.mappers.MapDataMapperTest.kt</ID>
    <ID>NewLineAtEndOfFile:UserPropertiesServiceImplTest.kt$com.qonversion.android.sdk.internal.userProperties.UserPropertiesServiceImplTest.kt</ID>
    <ID>NewLineAtEndOfFile:utils.kt$com.qonversion.android.sdk.utils.kt</ID>
    <ID>NoConsecutiveBlankLines:com.qonversion.android.sdk.UserPropertiesBuilderTest.kt:8</ID>
    <ID>NoConsecutiveBlankLines:com.qonversion.android.sdk.internal.QonversionInternalTest.kt:115</ID>
    <ID>NoConsecutiveBlankLines:com.qonversion.android.sdk.internal.QonversionInternalTest.kt:172</ID>
    <ID>NoConsecutiveBlankLines:com.qonversion.android.sdk.internal.billing.purchaser.GoogleBillingPurchaserTest.kt:26</ID>
    <ID>NoConsecutiveBlankLines:com.qonversion.android.sdk.internal.common.mappers.MapDataMapperTest.kt:82</ID>
    <ID>NoConsecutiveBlankLines:com.qonversion.android.sdk.internal.userProperties.UserPropertiesStorageImplTest.kt:333</ID>
    <ID>NoMultipleSpaces:com.qonversion.android.sdk.internal.networkLayer.apiInteractor.ApiInteractorTest.kt:379</ID>
    <ID>NoUnusedImports:com.qonversion.android.sdk.internal.InternalConfigTest.kt:9</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.internal.userProperties.UserPropertiesServiceImplTest.kt:11</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.internal.userProperties.UserPropertiesStorageImplTest.kt:6</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.old.EnvironmentProvider.kt:10</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.old.IncrementalDelayCalculator.kt:3</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.old.QProductCenterManager.kt:14</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.old.ad.AdvertisingProvider.kt:7</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.old.api.Api.kt:3</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.old.api.Api.kt:7</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.old.api.Api.kt:9</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.old.api.ApiHeadersProvider.kt:8</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.old.automations.AutomationsEvent.kt:3</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.old.automations.mvp.ScreenActivity.kt:12</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.old.billing.QonversionBillingService.kt:6</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.old.billing.utils.kt:8</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.old.di.module.ManagersModule.kt:18</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.old.di.module.NetworkModule.kt:9</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.old.dto.QonversionMappingAdapters.kt:19</ID>
    <ID>ReturnCount:AutomationsEventMapper.kt$AutomationsEventMapper$fun getEventFromRemoteMessage(messageData: Map&lt;String, String>): AutomationsEvent?</ID>
    <ID>ReturnCount:QProductCenterManager.kt$QProductCenterManager$private fun loadStoreProductsIfPossible( onLoadCompleted: ((products: List&lt;SkuDetails>) -> Unit)? = null, onLoadFailed: ((error: QonversionError) -> Unit)? = null )</ID>
    <ID>ReturnCount:QProductCenterManager.kt$QProductCenterManager$private fun processPurchase( context: Activity, productId: String, oldProductId: String?, @BillingFlowParams.ProrationMode prorationMode: Int?, offeringId: String?, callback: QonversionPermissionsCallback )</ID>
    <ID>ReturnCount:ScreenPresenter.kt$ScreenPresenter$override fun shouldOverrideUrlLoading(url: String?): Boolean</ID>
    <ID>ReturnCount:SkuDetailsTokenExtractor.kt$SkuDetailsTokenExtractor$override fun extract(response: String?): String</ID>
    <ID>SpacingAroundCurly:com.qonversion.android.sdk.internal.billing.dataFetcher.GoogleBillingDataFetcherTest.kt:475</ID>
    <ID>SpacingAroundCurly:com.qonversion.android.sdk.internal.billing.dataFetcher.GoogleBillingDataFetcherTest.kt:487</ID>
    <ID>SpacingAroundCurly:com.qonversion.android.sdk.internal.billing.dataFetcher.GoogleBillingDataFetcherTest.kt:499</ID>
    <ID>SpacingAroundCurly:com.qonversion.android.sdk.internal.billing.dataFetcher.GoogleBillingDataFetcherTest.kt:511</ID>
    <ID>SwallowedException:ApiErrorMapper.kt$ApiErrorMapper$catch (e: JSONException) { errorMessage = "$ERROR=failed to parse the backend response" }</ID>
    <ID>SwallowedException:AutomationsEventMapper.kt$AutomationsEventMapper$catch (e: JSONException) { logger.release("getEventFromRemoteMessage() -> Failed to retrieve event that triggered push notification") }</ID>
    <ID>SwallowedException:EnvironmentProvider.kt$EnvironmentProvider$catch (throwable: Throwable) { UNKNOWN }</ID>
    <ID>SwallowedException:PurchasesCache.kt$PurchasesCache$catch (e: IOException) { setOf() }</ID>
    <ID>SwallowedException:ScreenActivity.kt$ScreenActivity$catch (e: ActivityNotFoundException) { logger.release("Couldn't find any Activity to handle the Intent with deeplink $url") automationsManager.automationsDidFailExecuting(actionResult) }</ID>
    <ID>SwallowedException:ScreenActivity.kt$ScreenActivity$catch (e: ActivityNotFoundException) { logger.release("Couldn't find any Activity to handle the Intent with url $url") automationsManager.automationsDidFailExecuting(actionResult) }</ID>
    <ID>SwallowedException:ScreenActivity.kt$ScreenActivity$catch (e: Exception) { automationsManager.automationsDidFailExecuting(actionResult) }</ID>
    <ID>SwallowedException:SharedPreferencesCache.kt$SharedPreferencesCache$catch (e: IOException) { null }</ID>
    <ID>ThrowingExceptionsWithoutMessageOrCause:AdvertisingProvider.kt$AdvertisingProvider.AdvertisingConnection$IllegalStateException()</ID>
    <ID>ThrowsCount:ApiInteractorImpl.kt$ApiInteractorImpl$private suspend fun execute( request: Request, retryPolicy: RetryPolicy, attemptIndex: Int ): Response</ID>
    <ID>ThrowsCount:GoogleBillingDataFetcherTest.kt$GoogleBillingDataFetcherTest$private fun mockQuerySkuDetails( subsResult: List&lt;SkuDetails>?, inAppsResult: List&lt;SkuDetails>?, subsThrowException: Boolean = false, inAppsThrowException: Boolean = false, )</ID>
    <ID>TooGenericExceptionCaught:AdvertisingProvider.kt$AdvertisingProvider$e: Exception</ID>
    <ID>TooGenericExceptionCaught:EnvironmentProvider.kt$EnvironmentProvider$throwable: Throwable</ID>
    <ID>TooGenericExceptionCaught:JsonSerializer.kt$JsonSerializer$cause: NullPointerException</ID>
    <ID>TooGenericExceptionCaught:MapDataMapper.kt$MapDataMapper$e: NullPointerException</ID>
    <ID>TooGenericExceptionCaught:QAutomationsManager.kt$QAutomationsManager$e: Exception</ID>
    <ID>TooGenericExceptionCaught:ScreenActivity.kt$ScreenActivity$e: Exception</ID>
    <ID>TooGenericExceptionThrown:BaseResponse.kt$throw RuntimeException("backend exception")</ID>
    <ID>TooGenericExceptionThrown:Qonversion.kt$Qonversion$throw RuntimeException("Qonversion initialization error! Key should not be empty!")</ID>
    <ID>TooManyFunctions:Api.kt$Api</ID>
    <ID>TooManyFunctions:GooglePurchaseConverter.kt$GooglePurchaseConverter : PurchaseConverter</ID>
    <ID>TooManyFunctions:QAutomationsManager.kt$QAutomationsManager</ID>
    <ID>TooManyFunctions:QProductCenterManager.kt$QProductCenterManager : PurchasesListenerOfferingsDelegate</ID>
    <ID>TooManyFunctions:Qonversion.kt$Qonversion$Qonversion</ID>
    <ID>TooManyFunctions:QonversionBillingService.kt$QonversionBillingService : PurchasesUpdatedListenerBillingClientStateListenerBillingService</ID>
    <ID>TooManyFunctions:QonversionInternal.kt$QonversionInternal : Qonversion</ID>
    <ID>TooManyFunctions:QonversionRepository.kt$QonversionRepository</ID>
    <ID>TooManyFunctions:ScreenActivity.kt$ScreenActivity : AppCompatActivityView</ID>
    <ID>TooManyFunctions:utils.kt$com.qonversion.android.sdk.old.billing.utils.kt</ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QDateAdapter$@ToJson private fun toJson(date: Date): Long</ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QEligibilityAdapter$@ToJson private fun toJson(eligibilities: Map&lt;String, QEligibility>): List&lt;ProductEligibility></ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QEligibilityAdapter$eligibilities: Map&lt;String, QEligibility></ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QEligibilityStatusAdapter$@ToJson private fun toJson(enum: QIntroEligibilityStatus): String</ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QExperimentGroupTypeAdapter$@ToJson private fun toJson(enum: QExperimentGroupType): Int</ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QExperimentsAdapter$@ToJson private fun toJson(experiments: Map&lt;String, QExperimentInfo>): List&lt;QExperimentInfo></ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QOfferingTagAdapter$@ToJson private fun toJson(enum: QOfferingTag): Int?</ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QOfferingsAdapter$@ToJson private fun toJson(offerings: QOfferings?): List&lt;QOffering></ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QPermissionsAdapter$@ToJson private fun toJson(permissions: Map&lt;String, QPermission>): List&lt;QPermission></ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QProductDurationAdapter$@ToJson private fun toJson(enum: QProductDuration): Int</ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QProductRenewStateAdapter$@ToJson private fun toJson(enum: QProductRenewState): Int</ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QProductTypeAdapter$@ToJson private fun toJson(enum: QProductType): Int</ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QProductsAdapter$@ToJson private fun toJson(products: Map&lt;String, QProduct>): List&lt;QProduct></ID>
    <ID>WildcardImport:AdvertisingProvider.kt$import android.os.*</ID>
    <ID>WildcardImport:Api.kt$import com.qonversion.android.sdk.old.dto.*</ID>
    <ID>WildcardImport:Api.kt$import com.qonversion.android.sdk.old.dto.request.*</ID>
    <ID>WildcardImport:Api.kt$import retrofit2.http.*</ID>
    <ID>WildcardImport:NetworkModule.kt$import com.qonversion.android.sdk.old.dto.*</ID>
    <ID>WildcardImport:QProductCenterManager.kt$import com.qonversion.android.sdk.old.billing.*</ID>
    <ID>WildcardImport:QonversionBillingService.kt$import com.android.billingclient.api.*</ID>
    <ID>WildcardImport:ScreenActivity.kt$import com.qonversion.android.sdk.*</ID>
  </CurrentIssues>
</SmellBaseline>
