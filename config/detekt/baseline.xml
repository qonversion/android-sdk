<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>CommentSpacing:com.qonversion.android.sdk.internal.QIdentityManagerTest.kt:171</ID>
    <ID>ComplexMethod:ScreenPresenter.kt$ScreenPresenter$override fun onWebViewMessageReceived(message: String)</ID>
    <ID>ComplexMethod:ScreenPresenter.kt$ScreenPresenter$private fun mapProductInfo(product: QProduct): Map&lt;String, Any?&gt;</ID>
    <ID>ComplexMethod:errors.kt$internal fun BillingError.toQonversionError(): QonversionError</ID>
    <ID>ConstructorParameterNaming:Environment.kt$Environment$@Json(name = "app_version") val app_version: String</ID>
    <ID>EmptyCatchBlock:AdvertisingProvider.kt$AdvertisingProvider.AdvertisingConnection${ }</ID>
    <ID>EmptyFunctionBlock:AdvertisingProvider.kt$AdvertisingProvider.AdvertisingConnection${}</ID>
    <ID>EmptyFunctionBlock:QIdentityManagerTest.kt$QIdentityManagerTest.Identify.&lt;no name provided&gt;${}</ID>
    <ID>EmptyFunctionBlock:QProductCenterManager.kt$QProductCenterManager.&lt;no name provided&gt;${}</ID>
    <ID>Filename:com.qonversion.android.sdk.internal.storage.util.kt:1</ID>
    <ID>FinalNewline:com.qonversion.android.sdk.internal.IncrementalDelayCalculatorTest.kt:1</ID>
    <ID>FinalNewline:com.qonversion.android.sdk.internal.InternalConfigTest.kt:1</ID>
    <ID>FinalNewline:com.qonversion.android.sdk.internal.QHandledPurchasesCacheTest.kt:1</ID>
    <ID>FinalNewline:com.qonversion.android.sdk.internal.QProductCenterManagerTest.kt:1</ID>
    <ID>FinalNewline:com.qonversion.android.sdk.internal.QUserPropertiesManagerTest.kt:1</ID>
    <ID>FinalNewline:com.qonversion.android.sdk.internal.api.ApiHelperTest.kt:1</ID>
    <ID>FinalNewline:com.qonversion.android.sdk.internal.requests.AppRequestTest.kt:1</ID>
    <ID>FinalNewline:com.qonversion.android.sdk.internal.requests.OsRequestTest.kt:1</ID>
    <ID>FinalNewline:com.qonversion.android.sdk.internal.requests.ProviderDataRequestTest.kt:1</ID>
    <ID>FinalNewline:com.qonversion.android.sdk.internal.services.QUserInfoServiceTest.kt:1</ID>
    <ID>FinalNewline:com.qonversion.android.sdk.internal.storage.PurchasesCacheTest.kt:1</ID>
    <ID>FinalNewline:com.qonversion.android.sdk.internal.storage.util.kt:1</ID>
    <ID>FinalNewline:com.qonversion.android.sdk.utils.kt:1</ID>
    <ID>FinalNewline:io.qonversion.nocodes.internal.screen.service.FallbackServiceTest.kt:1</ID>
    <ID>FinalNewline:io.qonversion.nocodes.internal.utils.ErrorUtilsTest.kt:1</ID>
    <ID>ImplicitDefaultLocale:HomeFragment.kt$HomeFragment$String.format( "%s %s", getStr(R.string.buy_for), inApp.prettyPrice )</ID>
    <ID>LargeClass:QProductCenterManager.kt$QProductCenterManager : PurchasesListenerUserStateProvider</ID>
    <ID>LongParameterList:IBillingClientWrapper.kt$IBillingClientWrapper$( activity: Activity, product: QProduct, offerId: String?, applyOffer: Boolean? = true, updatePurchaseInfo: UpdatePurchaseInfo?, onFailed: (error: BillingError) -&gt; Unit )</ID>
    <ID>LongParameterList:ManagersModule.kt$ManagersModule$( appContext: Application, repository: QRepository, propertiesStorage: UserPropertiesStorage, incrementalDelayCalculator: IncrementalDelayCalculator, appStateProvider: AppStateProvider, logger: Logger )</ID>
    <ID>LongParameterList:QonversionBillingService.kt$QonversionBillingService$( activity: Activity, product: QProduct, offerId: String?, applyOffer: Boolean?, oldProduct: QProduct, updatePolicy: QPurchaseUpdatePolicy? )</ID>
    <ID>LongParameterList:RepositoryModule.kt$RepositoryModule$( retrofit: Retrofit, environmentProvider: EnvironmentProvider, config: InternalConfig, logger: Logger, apiErrorMapper: ApiErrorMapper, delayCalculator: IncrementalDelayCalculator )</ID>
    <ID>LongParameterList:RepositoryModule.kt$RepositoryModule$( retrofit: Retrofit, environmentProvider: EnvironmentProvider, config: InternalConfig, logger: Logger, apiErrorMapper: ApiErrorMapper, delayCalculator: IncrementalDelayCalculator, rateLimiter: RateLimiter )</ID>
    <ID>LongParameterList:ScreenPresenter.kt$ScreenPresenter$( private val service: ScreenService, private val view: ScreenContract.View, logger: Logger, private val delegateProvider: NoCodesDelegateProvider, private val serializer: Serializer, private val actionMapper: Mapper&lt;QAction&gt;, private val scope: CoroutineScope = CoroutineScope(Dispatchers.IO), )</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$10002</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$10003</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$10004</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$10005</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$10006</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$10008</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20005</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20006</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20007</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20008</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20010</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20011</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20012</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20013</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20014</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20201</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20203</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20210</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20300</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20303</ID>
    <ID>MagicNumber:ApiErrorMapper.kt$ApiErrorMapper$20399</ID>
    <ID>MagicNumber:ApiInteractorImpl.kt$418</ID>
    <ID>MagicNumber:LogLevel.kt$LogLevel.Error$30</ID>
    <ID>MagicNumber:LogLevel.kt$LogLevel.Info$10</ID>
    <ID>MagicNumber:LogLevel.kt$LogLevel.Warning$20</ID>
    <ID>MagicNumber:QEntitlementsCacheLifetime.kt$QEntitlementsCacheLifetime.Month$30</ID>
    <ID>MagicNumber:QEntitlementsCacheLifetime.kt$QEntitlementsCacheLifetime.SixMonths$180</ID>
    <ID>MagicNumber:QEntitlementsCacheLifetime.kt$QEntitlementsCacheLifetime.ThreeMonths$90</ID>
    <ID>MagicNumber:QEntitlementsCacheLifetime.kt$QEntitlementsCacheLifetime.TwoMonths$60</ID>
    <ID>MagicNumber:QEntitlementsCacheLifetime.kt$QEntitlementsCacheLifetime.TwoWeeks$14</ID>
    <ID>MagicNumber:QEntitlementsCacheLifetime.kt$QEntitlementsCacheLifetime.Week$7</ID>
    <ID>MagicNumber:QEntitlementsCacheLifetime.kt$QEntitlementsCacheLifetime.Year$365</ID>
    <ID>MagicNumber:QProductPrice.kt$QProductPrice$1_000_000.0</ID>
    <ID>MagicNumber:QProductPricingPhase.kt$QProductPricingPhase.RecurrenceMode.NonRecurring$3</ID>
    <ID>MagicNumber:QProductRenewState.kt$QProductRenewState.BillingIssue$3</ID>
    <ID>MagicNumber:QProductRenewState.kt$QProductRenewState.Companion$3</ID>
    <ID>MagicNumber:extensions.kt$1000</ID>
    <ID>MagicNumber:utils.kt$1000</ID>
    <ID>MagicNumber:utils.kt$24L</ID>
    <ID>MagicNumber:utils.kt$30</ID>
    <ID>MagicNumber:utils.kt$365</ID>
    <ID>MagicNumber:utils.kt$60</ID>
    <ID>MagicNumber:utils.kt$7</ID>
    <ID>MatchingDeclarationName:util.kt$Util</ID>
    <ID>MaxLineLength:ApiErrorMapper.kt$ApiErrorMapper$20201 -&gt; "For more details please check our guide [Troubleshooting](https://documentation.qonversion.io/docs/troubleshooting)"</ID>
    <ID>MaxLineLength:ApiErrorMapper.kt$ApiErrorMapper$20203 -&gt; "Possible reasons for this error are fraud purchases and incorrect configuration of the project key in the Qonversion Dashboard"</ID>
    <ID>MaxLineLength:GooglePurchaseConverter.kt$GooglePurchaseConverter$override</ID>
    <ID>MaxLineLength:LaunchResultCacheWrapperTest.kt$LaunchResultCacheWrapperTest$cacheWrapper = LaunchResultCacheWrapper(mockMoshi, mockPrefsCache, mockCacheConfigProvider, mockQFallbacksService)</ID>
    <ID>MaxLineLength:OutagerIntegrationTest.kt$OutagerIntegrationTest$"lgeigljfpmeoddkcebkcepjc.AO-J1Oy305qZj99jXTPEVBN8UZGoYAtjDLj4uTjRQvUFaG0vie-nr6VBlN0qnNDMU8eJR-sI7o3CwQyMOEHKl8eJsoQ86KSFzxKBR07PSpHLI_o7agXhNKY"</ID>
    <ID>MaxLineLength:OutagerIntegrationTest.kt$OutagerIntegrationTest$purchaseToken = "lgeigljfpmeoddkcebkcepjc.AO-J1Oy305qZj99jXTPEVBN8UZGoYAtjDLj4uTjRQvUFaG0vie-nr6VBlN0qnNDMU8eJR-sI7o3CwQyMOEHKl8eJsoQ86KSFzxKBR07PSpHLI_o7agXhNKY"</ID>
    <ID>MaxLineLength:OutagerIntegrationTest.kt$OutagerIntegrationTest.&lt;no name provided&gt;$assertEquals(error.additionalMessage, """HTTP status code=503, data={"message":"Service Unavailable","code":0,"status":503}. """)</ID>
    <ID>MaxLineLength:PurchasesCacheTest.kt$PurchasesCacheTest$"\"purchaseToken\":\"gfegjilekkmecbonpfjiaakm.AO-J1OxQCaAn0NPlHTh5CoOiXK0p19X7qEymW9SHtssrggp7S9YafjA1oPBPlWO4Ur3W5rtyNJBzIrVoLOb5In0Jxofv4xV_7t1HaUYYd_f8xOBk7nRIY7g\","</ID>
    <ID>MaxLineLength:PurchasesCacheTest.kt$PurchasesCacheTest$private val fourPurchasesStr = "[${generatePurchaseJson()},${generatePurchaseJson("2")},${generatePurchaseJson("3")},${generatePurchaseJson("4")}]"</ID>
    <ID>MaxLineLength:PurchasesCacheTest.kt$PurchasesCacheTest$purchaseToken = "gfegjilekkmecbonpfjiaakm.AO-J1OxQCaAn0NPlHTh5CoOiXK0p19X7qEymW9SHtssrggp7S9YafjA1oPBPlWO4Ur3W5rtyNJBzIrVoLOb5In0Jxofv4xV_7t1HaUYYd_f8xOBk7nRIY7g"</ID>
    <ID>MaxLineLength:PurchasesCacheTest.kt$PurchasesCacheTest.SavePurchase$"[${generatePurchaseJson("2")},${generatePurchaseJson("3")},${generatePurchaseJson("4")},${generatePurchaseJson("5")}]"</ID>
    <ID>MaxLineLength:QEntitlementsUpdateListener.kt$QEntitlementsUpdateListener$*</ID>
    <ID>MaxLineLength:QProductCenterManagerTest.kt$QProductCenterManagerTest${ Assert.assertEquals("Wrong installDate value", installDate.milliSecondsToSeconds(), installDateSlot.captured) }</ID>
    <ID>MaxLineLength:QProductCenterManagerTest.kt$QProductCenterManagerTest${ Assert.assertEquals("Wrong purchaseToken value", purchaseToken, entityPurchaseSlot.captured.purchaseToken) }</ID>
    <ID>MaxLineLength:QProductStoreDetails.kt$QProductStoreDetails$basePlanSubscriptionOfferDetails?.basePlan?.recurrenceMode == QProductPricingPhase.RecurrenceMode.NonRecurring</ID>
    <ID>MaxLineLength:QRemoteConfigManager.kt$QRemoteConfigManager.&lt;no name provided&gt;$val remoteConfigs = baseRemoteConfigList.remoteConfigs.filter { contextKeys.contains(it.source.contextKey) }.toMutableList()</ID>
    <ID>MaxLineLength:QUserPropertiesManagerTest.kt$QUserPropertiesManagerTest$fun</ID>
    <ID>MaxLineLength:Qonversion.kt$Qonversion$*</ID>
    <ID>MaxLineLength:QonversionConfig.kt$QonversionConfig.Builder$*</ID>
    <ID>MaxLineLength:QonversionConfig.kt$QonversionConfig.Builder$val primaryConfig = PrimaryConfig(projectKey, launchMode, environment, proxyUrl, isKidsMode, sendFbAttribution)</ID>
    <ID>MaxLineLength:QonversionError.kt$QonversionErrorCode$*</ID>
    <ID>MaxLineLength:QonversionError.kt$QonversionErrorCode$RemoteConfigurationNotAvailable : QonversionErrorCode</ID>
    <ID>MaxLineLength:QonversionRepositoryIntegrationTest.kt$QonversionRepositoryIntegrationTest$"""HTTP status code=400, data={"message":"Invalid access token received","code":10003,"status":400,"extra":[]}. """</ID>
    <ID>MaxLineLength:QonversionRepositoryIntegrationTest.kt$QonversionRepositoryIntegrationTest$"efnkoceomiocidgigbalneag.AO-J1Ow8JyXX8gs8W9blILbU9Nqy3Mr-RMTLgFG2DLOhO1urkWpr80PUSE6eA0IuEzl_k4Guecep5JZJwcnSYOWzTZhqwusafayRCbv4kRMUR-rR9Ot11nQ"</ID>
    <ID>MaxLineLength:QonversionRepositoryIntegrationTest.kt$QonversionRepositoryIntegrationTest$"lgeigljfpmeoddkcebkcepjc.AO-J1Oy305qZj99jXTPEVBN8UZGoYAtjDLj4uTjRQvUFaG0vie-nr6VBlN0qnNDMU8eJR-sI7o3CwQyMOEHKl8eJsoQ86KSFzxKBR07PSpHLI_o7agXhNKY"</ID>
    <ID>MaxLineLength:QonversionRepositoryIntegrationTest.kt$QonversionRepositoryIntegrationTest$purchaseToken = "lgeigljfpmeoddkcebkcepjc.AO-J1Oy305qZj99jXTPEVBN8UZGoYAtjDLj4uTjRQvUFaG0vie-nr6VBlN0qnNDMU8eJR-sI7o3CwQyMOEHKl8eJsoQ86KSFzxKBR07PSpHLI_o7agXhNKY"</ID>
    <ID>MaxLineLength:ScreenControllerImpl.kt$ScreenControllerImpl$val error = NoCodesError(ErrorCode.ActivityStart, "Failed to open the screen with the context key $contextKey")</ID>
    <ID>MaxLineLength:ScreenFragment.kt$ScreenFragment$binding?.webView?.evaluateJavascript("window.dispatchEvent(new CustomEvent(\"setProducts\", {detail: $jsonData} ))", null)</ID>
    <ID>MaxLineLength:ScreenPresenter.kt$ScreenPresenter$logger.verbose("ScreenPresenter -&gt; displaying the screen with id ${screen.id}, context key: ${screen.contextKey}")</ID>
    <ID>MaxLineLength:ScreenPresenterTest.kt$ScreenPresenterTest$fun</ID>
    <ID>MaxLineLength:ScreenServiceImpl.kt$ScreenServiceImpl$logger.info("getScreen() -&gt; Successfully loaded fallback screen for context key: $contextKey")</ID>
    <ID>MaxLineLength:ScreenServiceImpl.kt$ScreenServiceImpl$logger.info("getScreenById() -&gt; Successfully loaded fallback screen for screen ID: $screenId")</ID>
    <ID>MaxLineLength:SharedPreferencesCacheTest.kt$SharedPreferencesCacheTest.Object${ Assert.assertEquals("Wrong available offerings size value", 1, realValue?.offerings?.availableOfferings?.size) }</ID>
    <ID>MaxLineLength:SharedPreferencesCacheTest.kt$SharedPreferencesCacheTest.Object${ Assert.assertEquals("Wrong offering products value", expectedValue.offerings?.main?.products, realValue?.offerings?.main?.products) }</ID>
    <ID>MaxLineLength:SharedPreferencesCacheTest.kt$SharedPreferencesCacheTest.Object${ Assert.assertEquals("Wrong offeringID value", expectedValue.offerings?.main?.offeringId, realValue?.offerings?.main?.offeringId) }</ID>
    <ID>MaxLineLength:SharedPreferencesCacheTest.kt$SharedPreferencesCacheTest.Object${ Assert.assertEquals("Wrong userProducts value", expectedValue.userProducts, realValue?.userProducts) }</ID>
    <ID>MaxLineLength:errors.kt$"Please make sure that you are using the google account where purchases are allowed and the application was correctly signed and properly set up for billing."</ID>
    <ID>MaxLineLength:util.kt$Util.Companion$"\"offerings\":[{\"id\":\"main\",\"tag\":1,\"products\":[{\"id\":\"in_app\",\"store_id\":\"qonversion_inapp_consumable\"},{\"id\":\"main\",\"store_id\":\"qonversion_subs_weekly\"}]"</ID>
    <ID>MaxLineLength:util.kt$Util.Companion$"\"permissions\":[{\"id\":\"standart\",\"associated_product\":\"in_app\",\"renew_state\":-1,\"started_timestamp\":1612880300,\"source\":\"playstore\",\"active\":1,\"renews_count\":0,\"grant_type\":\"Purchase\",\"store_transactions\":[]},"</ID>
    <ID>MaxLineLength:util.kt$Util.Companion$"{\"id\":\"Test Permission\",\"associated_product\":\"in_app\",\"renew_state\":-1,\"started_timestamp\":1612880300,\"source\":\"appstore\",\"active\":1,\"renews_count\":0,\"grant_type\":\"Purchase\",\"store_transactions\":[]}],"</ID>
    <ID>MaxLineLength:utils.kt$val msg = "error code: ${error.code}, description: ${error.description}, additionalMessage: ${error.additionalMessage}"</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.QonversionConfig.kt:163</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.dto.QonversionError.kt:46</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.dto.products.QProductStoreDetails.kt:130</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.OutagerIntegrationTest.kt:214</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.OutagerIntegrationTest.kt:371</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.OutagerIntegrationTest.kt:87</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.QProductCenterManagerTest.kt:151</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.QProductCenterManagerTest.kt:152</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.QRemoteConfigManager.kt:225</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.QUserPropertiesManagerTest.kt:178</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.QonversionRepositoryIntegrationTest.kt:289</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.QonversionRepositoryIntegrationTest.kt:358</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.QonversionRepositoryIntegrationTest.kt:724</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.QonversionRepositoryIntegrationTest.kt:86</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.api.ApiErrorMapper.kt:118</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.api.ApiErrorMapper.kt:119</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.converter.GooglePurchaseConverter.kt:17</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.errors.kt:33</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.storage.LaunchResultCacheWrapperTest.kt:29</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.storage.PurchasesCacheTest.kt:156</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.storage.PurchasesCacheTest.kt:166</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.storage.PurchasesCacheTest.kt:18</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.storage.PurchasesCacheTest.kt:65</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.storage.SharedPreferencesCacheTest.kt:219</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.storage.SharedPreferencesCacheTest.kt:220</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.storage.SharedPreferencesCacheTest.kt:221</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.storage.SharedPreferencesCacheTest.kt:222</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.storage.util.kt:137</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.storage.util.kt:138</ID>
    <ID>MaximumLineLength:com.qonversion.android.sdk.internal.storage.util.kt:140</ID>
    <ID>MaximumLineLength:io.qonversion.nocodes.internal.screen.controller.ScreenControllerImpl.kt:54</ID>
    <ID>MaximumLineLength:io.qonversion.nocodes.internal.screen.service.FallbackServiceTest.kt:43</ID>
    <ID>MaximumLineLength:io.qonversion.nocodes.internal.screen.service.ScreenServiceImpl.kt:107</ID>
    <ID>MaximumLineLength:io.qonversion.nocodes.internal.screen.service.ScreenServiceImpl.kt:59</ID>
    <ID>MaximumLineLength:io.qonversion.nocodes.internal.screen.view.ScreenFragment.kt:197</ID>
    <ID>MaximumLineLength:io.qonversion.nocodes.internal.screen.view.ScreenPresenter.kt:64</ID>
    <ID>MaximumLineLength:io.qonversion.sample.utils.kt:49</ID>
    <ID>NestedBlockDepth:ActionMapper.kt$ActionMapper$override fun fromMap(data: Map&lt;*, *&gt;): QAction</ID>
    <ID>NestedBlockDepth:ApiErrorMapper.kt$ApiErrorMapper$fun &lt;T&gt; getErrorFromResponse(value: Response&lt;T&gt;): QonversionError</ID>
    <ID>NestedBlockDepth:ScreenPresenter.kt$ScreenPresenter$private fun mapProductInfo(product: QProduct): Map&lt;String, Any?&gt;</ID>
    <ID>NestedBlockDepth:ScreenServiceImpl.kt$ScreenServiceImpl$override suspend fun getScreen(contextKey: String): NoCodeScreen</ID>
    <ID>NestedBlockDepth:ScreenServiceImpl.kt$ScreenServiceImpl$override suspend fun getScreenById(screenId: String): NoCodeScreen</ID>
    <ID>NewLineAtEndOfFile:ApiHelperTest.kt$com.qonversion.android.sdk.internal.api.ApiHelperTest.kt</ID>
    <ID>NewLineAtEndOfFile:AppRequestTest.kt$com.qonversion.android.sdk.internal.requests.AppRequestTest.kt</ID>
    <ID>NewLineAtEndOfFile:IncrementalDelayCalculatorTest.kt$com.qonversion.android.sdk.internal.IncrementalDelayCalculatorTest.kt</ID>
    <ID>NewLineAtEndOfFile:InternalConfigTest.kt$com.qonversion.android.sdk.internal.InternalConfigTest.kt</ID>
    <ID>NewLineAtEndOfFile:OsRequestTest.kt$com.qonversion.android.sdk.internal.requests.OsRequestTest.kt</ID>
    <ID>NewLineAtEndOfFile:ProviderDataRequestTest.kt$com.qonversion.android.sdk.internal.requests.ProviderDataRequestTest.kt</ID>
    <ID>NewLineAtEndOfFile:PurchasesCacheTest.kt$com.qonversion.android.sdk.internal.storage.PurchasesCacheTest.kt</ID>
    <ID>NewLineAtEndOfFile:QHandledPurchasesCacheTest.kt$com.qonversion.android.sdk.internal.QHandledPurchasesCacheTest.kt</ID>
    <ID>NewLineAtEndOfFile:QProductCenterManagerTest.kt$com.qonversion.android.sdk.internal.QProductCenterManagerTest.kt</ID>
    <ID>NewLineAtEndOfFile:QUserInfoServiceTest.kt$com.qonversion.android.sdk.internal.services.QUserInfoServiceTest.kt</ID>
    <ID>NewLineAtEndOfFile:QUserPropertiesManagerTest.kt$com.qonversion.android.sdk.internal.QUserPropertiesManagerTest.kt</ID>
    <ID>NewLineAtEndOfFile:util.kt$com.qonversion.android.sdk.internal.storage.util.kt</ID>
    <ID>NewLineAtEndOfFile:utils.kt$com.qonversion.android.sdk.utils.kt</ID>
    <ID>NoConsecutiveBlankLines:com.qonversion.android.sdk.QonversionConfigTest.kt:118</ID>
    <ID>NoConsecutiveBlankLines:com.qonversion.android.sdk.QonversionConfigTest.kt:144</ID>
    <ID>NoConsecutiveBlankLines:com.qonversion.android.sdk.internal.QAttributionManagerTest.kt:141</ID>
    <ID>NoConsecutiveBlankLines:com.qonversion.android.sdk.internal.requests.ProviderDataRequestTest.kt:18</ID>
    <ID>NoTrailingSpaces:io.qonversion.nocodes.internal.screen.service.FallbackServiceTest.kt:66</ID>
    <ID>NoTrailingSpaces:io.qonversion.nocodes.internal.screen.service.FallbackServiceTest.kt:69</ID>
    <ID>NoTrailingSpaces:io.qonversion.nocodes.internal.screen.service.FallbackServiceTest.kt:72</ID>
    <ID>NoTrailingSpaces:io.qonversion.nocodes.internal.screen.service.FallbackServiceTest.kt:77</ID>
    <ID>NoTrailingSpaces:io.qonversion.nocodes.internal.utils.ErrorUtilsTest.kt:89</ID>
    <ID>NoUnusedImports:com.qonversion.android.sdk.automations.internal.QAutomationsManagerTest.kt:20</ID>
    <ID>NoUnusedImports:com.qonversion.android.sdk.automations.internal.QAutomationsManagerTest.kt:22</ID>
    <ID>NoUnusedImports:com.qonversion.android.sdk.automations.internal.QAutomationsManagerTest.kt:7</ID>
    <ID>NoUnusedImports:io.qonversion.nocodes.internal.screen.service.FallbackServiceTest.kt:14</ID>
    <ID>NoUnusedImports:io.qonversion.nocodes.internal.screen.service.FallbackServiceTest.kt:15</ID>
    <ID>NoUnusedImports:io.qonversion.nocodes.internal.screen.service.FallbackServiceTest.kt:4</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.automations.internal.AutomationsEventMapperTest.kt:12</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.automations.internal.AutomationsEventMapperTest.kt:6</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.automations.internal.QAutomationsManagerTest.kt:23</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.automations.internal.QAutomationsManagerTest.kt:9</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.dto.products.QProduct.kt:3</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.internal.AdvertisingProvider.kt:7</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.internal.EnvironmentProvider.kt:11</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.internal.IncrementalDelayCalculator.kt:3</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.internal.IncrementalDelayCalculatorTest.kt:3</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.internal.IncrementalDelayCalculatorTest.kt:4</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.internal.IncrementalDelayCalculatorTest.kt:8</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.internal.QAttributionManagerTest.kt:9</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.internal.QHandledPurchasesCacheTest.kt:4</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.internal.QIdentityManagerTest.kt:7</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.internal.QIdentityManagerTest.kt:9</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.internal.QProductCenterManagerTest.kt:21</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.internal.QProductCenterManagerTest.kt:29</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.internal.QUserPropertiesManagerTest.kt:18</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.internal.QUserPropertiesManagerTest.kt:19</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.internal.billing.QonversionBillingService.kt:5</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.internal.services.QUserInfoServiceTest.kt:11</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.internal.services.QUserInfoServiceTest.kt:5</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.internal.storage.LaunchResultCacheWrapperTest.kt:8</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.internal.storage.PurchasesCacheTest.kt:6</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.internal.storage.SharedPreferencesCacheTest.kt:5</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.internal.storage.util.kt:24</ID>
    <ID>NoWildcardImports:com.qonversion.android.sdk.utils.kt:4</ID>
    <ID>NoWildcardImports:io.qonversion.nocodes.internal.screen.service.FallbackServiceTest.kt:11</ID>
    <ID>NoWildcardImports:io.qonversion.nocodes.internal.utils.ErrorUtilsTest.kt:4</ID>
    <ID>NoWildcardImports:io.qonversion.sample.HomeFragment.kt:33</ID>
    <ID>ReturnCount:BillingClientWrapper.kt$BillingClientWrapper$override fun makePurchase( activity: Activity, product: QProduct, offerId: String?, applyOffer: Boolean?, updatePurchaseInfo: UpdatePurchaseInfo?, onFailed: (error: BillingError) -&gt; Unit )</ID>
    <ID>ReturnCount:ErrorUtils.kt$ErrorUtils$ fun isServerError(error: Exception): Boolean</ID>
    <ID>ReturnCount:ExceptionHandler.kt$ExceptionHandler$private fun isQonversionException(exception: Throwable): Boolean</ID>
    <ID>ReturnCount:QExceptionManager.kt$QExceptionManager$private fun getContentOfCrashReport(filename: String): CrashRequest.ExceptionInfo?</ID>
    <ID>ReturnCount:QProductCenterManager.kt$QProductCenterManager$@Synchronized private fun executeProductsBlocks(loadStoreProductsError: QonversionError? = null)</ID>
    <ID>ReturnCount:QProductCenterManager.kt$QProductCenterManager$fun identify(identityId: String, callback: QonversionUserCallback? = null)</ID>
    <ID>ReturnCount:QProductCenterManager.kt$QProductCenterManager$private fun calculatePurchasePermissionsLocally( purchase: Purchase, purchaseCallback: QonversionPurchaseCallback?, purchaseError: QonversionError )</ID>
    <ID>SpacingAroundColon:com.qonversion.android.sdk.internal.requests.ProviderDataRequestTest.kt:45</ID>
    <ID>SpacingAroundCurly:com.qonversion.android.sdk.internal.QAttributionManagerTest.kt:39</ID>
    <ID>SpacingAroundCurly:com.qonversion.android.sdk.internal.QAttributionManagerTest.kt:54</ID>
    <ID>SpacingAroundParens:com.qonversion.android.sdk.internal.QUserPropertiesManagerTest.kt:468</ID>
    <ID>SpacingAroundParens:com.qonversion.android.sdk.internal.storage.SharedPreferencesCacheTest.kt:209</ID>
    <ID>SpacingAroundParens:com.qonversion.android.sdk.internal.storage.SharedPreferencesCacheTest.kt:238</ID>
    <ID>SpacingAroundParens:com.qonversion.android.sdk.internal.storage.SharedPreferencesCacheTest.kt:257</ID>
    <ID>SpacingAroundParens:com.qonversion.android.sdk.utils.kt:66</ID>
    <ID>StringTemplate:com.qonversion.android.sdk.utils.kt:50</ID>
    <ID>SwallowedException:ApiErrorMapper.kt$ApiErrorMapper$catch (e: JSONException) { errorMessage = "$ERROR=failed to parse the backend response" }</ID>
    <ID>SwallowedException:AuthActivity.kt$AuthActivity$catch (e: ApiException) { showGoogleLoginError() }</ID>
    <ID>SwallowedException:EnvironmentProvider.kt$EnvironmentProvider$catch (throwable: Throwable) { UNKNOWN }</ID>
    <ID>SwallowedException:ExceptionHandler.kt$ExceptionHandler$catch (e: Exception) { "" }</ID>
    <ID>SwallowedException:FacebookAttribution.kt$FacebookAttribution$catch (e: Exception) { null }</ID>
    <ID>SwallowedException:FallbackService.kt$FallbackService.Companion$catch (e: Exception) { false }</ID>
    <ID>SwallowedException:PurchasesCache.kt$PurchasesCache$catch (e: IOException) { setOf() }</ID>
    <ID>SwallowedException:ScreenFragment.kt$ScreenFragment$catch (e: ActivityNotFoundException) { logger.error("ScreenActivity -&gt; Couldn't find any Activity to handle the Intent with deeplink $url") delegate?.onActionFailedToExecute(action) }</ID>
    <ID>SwallowedException:ScreenFragment.kt$ScreenFragment$catch (e: ActivityNotFoundException) { logger.error("ScreenActivity -&gt; Couldn't find any Activity to handle the Intent with url $url") delegate?.onActionFailedToExecute(action) }</ID>
    <ID>SwallowedException:ScreenFragment.kt$ScreenFragment$catch (e: Exception) { delegate?.onActionFailedToExecute(action) }</ID>
    <ID>SwallowedException:ScreenPresenter.kt$ScreenPresenter$catch (e: Exception) { logger.error("ScreenPresenter -&gt; failed to open the screen with id $screenId") }</ID>
    <ID>SwallowedException:SharedPreferencesCache.kt$SharedPreferencesCache$catch (e: IOException) { null }</ID>
    <ID>ThrowingExceptionsWithoutMessageOrCause:AdvertisingProvider.kt$AdvertisingProvider.AdvertisingConnection$IllegalStateException()</ID>
    <ID>TooGenericExceptionCaught:AdvertisingProvider.kt$AdvertisingProvider$e: Exception</ID>
    <ID>TooGenericExceptionCaught:EnvironmentProvider.kt$EnvironmentProvider$throwable: Throwable</ID>
    <ID>TooGenericExceptionCaught:ExceptionHandler.kt$ExceptionHandler$cause: Exception</ID>
    <ID>TooGenericExceptionCaught:ExceptionHandler.kt$ExceptionHandler$e: Exception</ID>
    <ID>TooGenericExceptionCaught:FacebookAttribution.kt$FacebookAttribution$e: Exception</ID>
    <ID>TooGenericExceptionCaught:FallbackService.kt$FallbackService.Companion$e: Exception</ID>
    <ID>TooGenericExceptionCaught:FallbackServiceImpl.kt$FallbackServiceImpl$e: Exception</ID>
    <ID>TooGenericExceptionCaught:JsonSerializer.kt$JsonSerializer$cause: NullPointerException</ID>
    <ID>TooGenericExceptionCaught:NetworkClientImpl.kt$NetworkClientImpl$cause: Exception</ID>
    <ID>TooGenericExceptionCaught:QExceptionManager.kt$QExceptionManager$cause: Exception</ID>
    <ID>TooGenericExceptionCaught:QFallbacksService.kt$QFallbacksService$e: Exception</ID>
    <ID>TooGenericExceptionCaught:ScreenControllerImpl.kt$ScreenControllerImpl$e: Exception</ID>
    <ID>TooGenericExceptionCaught:ScreenFragment.kt$ScreenFragment$e: Exception</ID>
    <ID>TooGenericExceptionCaught:ScreenPresenter.kt$ScreenPresenter$e: Exception</ID>
    <ID>TooGenericExceptionCaught:ScreenServiceImpl.kt$ScreenServiceImpl$e: Exception</ID>
    <ID>TooGenericExceptionCaught:ScreenServiceImpl.kt$ScreenServiceImpl$fallbackError: Exception</ID>
    <ID>TooManyFunctions:Api.kt$Api</ID>
    <ID>TooManyFunctions:AppComponent.kt$AppComponent</ID>
    <ID>TooManyFunctions:BillingClientWrapper.kt$BillingClientWrapper : IBillingClientWrapper</ID>
    <ID>TooManyFunctions:Cache.kt$Cache</ID>
    <ID>TooManyFunctions:DefaultRepository.kt$DefaultRepository : QRepository</ID>
    <ID>TooManyFunctions:HomeFragment.kt$HomeFragment : FragmentNoCodesDelegate</ID>
    <ID>TooManyFunctions:LaunchResultCacheWrapper.kt$LaunchResultCacheWrapper</ID>
    <ID>TooManyFunctions:QProductCenterManager.kt$QProductCenterManager : PurchasesListenerUserStateProvider</ID>
    <ID>TooManyFunctions:QRemoteConfigManager.kt$QRemoteConfigManager</ID>
    <ID>TooManyFunctions:QRepository.kt$QRepository</ID>
    <ID>TooManyFunctions:QUserPropertiesManager.kt$QUserPropertiesManager : FacebookAttributionListener</ID>
    <ID>TooManyFunctions:Qonversion.kt$Qonversion</ID>
    <ID>TooManyFunctions:QonversionBillingService.kt$QonversionBillingService : PurchasesUpdatedListenerConnectionListenerBillingService</ID>
    <ID>TooManyFunctions:QonversionInternal.kt$QonversionInternal : QonversionLifecycleDelegateAppStateProvider</ID>
    <ID>TooManyFunctions:RepositoryWithRateLimits.kt$RepositoryWithRateLimits : QRepository</ID>
    <ID>TooManyFunctions:ScreenFragment.kt$ScreenFragment : FragmentView</ID>
    <ID>TooManyFunctions:SharedPreferencesCache.kt$SharedPreferencesCache : Cache</ID>
    <ID>TooManyFunctions:extensions.kt$com.qonversion.android.sdk.internal.extensions.kt</ID>
    <ID>UnnecessaryAbstractClass:BaseClass.kt$BaseClass</ID>
    <ID>UnnecessaryAbstractClass:RequestData.kt$RequestData</ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QDateAdapter$@ToJson private fun toJson(date: Date): Long</ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QEligibilityAdapter$@ToJson private fun toJson( @Suppress("UNUSED_PARAMETER") eligibilities: Map&lt;String, QEligibility&gt; ): List&lt;ProductEligibility&gt;</ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QEligibilityStatusAdapter$@ToJson private fun toJson(enum: QIntroEligibilityStatus): String</ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QEntitlementGrantTypeAdapter$@ToJson private fun toJson(enum: QEntitlementGrantType): String</ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QEntitlementSourceAdapter$@ToJson private fun toJson(enum: QEntitlementSource): String</ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QExperimentGroupTypeAdapter$@ToJson private fun toJson(enum: QExperimentGroupType): String</ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QOfferingTagAdapter$@ToJson private fun toJson(enum: QOfferingTag): Int?</ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QOfferingsAdapter$@ToJson private fun toJson(offerings: QOfferings?): List&lt;QOffering&gt;</ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QPermissionsAdapter$@ToJson private fun toJson(permissions: Map&lt;String, QPermission&gt;): List&lt;QPermission&gt;</ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QProductRenewStateAdapter$@ToJson private fun toJson(enum: QProductRenewState): Int</ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QProductsAdapter$@ToJson private fun toJson(products: Map&lt;String, QProduct&gt;): List&lt;QProduct&gt;</ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QRemoteConfigListAdapter$@ToJson private fun toJson(remoteConfigList: QRemoteConfigList?): List&lt;QRemoteConfig&gt;</ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QRemoteConfigurationSourceAssignmentTypeAdapter$@ToJson private fun toJson(enum: QRemoteConfigurationAssignmentType): String</ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QRemoteConfigurationSourceTypeAdapter$@ToJson private fun toJson(enum: QRemoteConfigurationSourceType): String</ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QTransactionEnvironmentAdapter$@ToJson private fun toJson(enum: QTransactionEnvironment): String</ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QTransactionOwnershipTypeAdapter$@ToJson private fun toJson(enum: QTransactionOwnershipType): String</ID>
    <ID>UnusedPrivateMember:QonversionMappingAdapters.kt$QTransactionTypeAdapter$@ToJson private fun toJson(enum: QTransactionType): String</ID>
    <ID>UtilityClassWithPublicConstructor:util.kt$Util</ID>
    <ID>WildcardImport:AdvertisingProvider.kt$import android.os.*</ID>
    <ID>WildcardImport:QProduct.kt$import com.android.billingclient.api.*</ID>
    <ID>WildcardImport:QonversionBillingService.kt$import com.android.billingclient.api.*</ID>
  </CurrentIssues>
</SmellBaseline>
