# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

def update_gradle(new_version)
	path = "../build.gradle"
    regex = /versionName: ".*",/
    result_value = "versionName: \"#{new_version}\","

    update_file(path, regex, result_value)
end

def update_file(path, regex, result_value)
	file = File.read(path)
    new_content = file.gsub(regex, result_value)
    File.open(path, 'w') { |line| line.puts new_content }
end

def get_tag
  tag = last_git_tag()
  result_tag = tag.scan(%r{\d{1,2}.\d{1,2}.\d{1,3}}).first
  return result_tag
end

def calculate_minor_version(tag)
  major, minor, patch = parse_versions(tag)
  new_minor_version = minor.to_i.next.to_s
  new_version = major + "." + new_minor_version + "." + "0"
  return new_version
end

def calculate_patch_version(tag)
  major, minor, patch = parse_versions(tag)
  new_patch_version = patch.to_i.next.to_s
  new_version = major + "." + minor + "." + new_patch_version

  return new_version
end

def push_tag(tag)
  system("git checkout develop")
  system("git pull origin develop")
  add_git_tag(tag: tag)
  push_git_tags(tag: tag)
end

def parse_versions(tag)
  split_version_array = tag.split(".", 3)

  if split_version_array.length == 3
    major = split_version_array[0]
    minor = split_version_array[1]
    patch = split_version_array[2]

    return major, minor, patch
  end
end

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  lane :patch do
    tag = get_tag
    new_version = calculate_patch_version(tag)
    new_tag = "prerelease/" + new_version
    push_tag(new_tag)
  end

  lane :minor do
    tag = get_tag
    new_version = calculate_minor_version(tag)
    new_tag = "prerelease/" + new_version
    push_tag(new_tag)
  end

  lane :bump do |options|
  	new_version = options[:version]

	update_gradle(new_version)
  end

end